type
  TCustomWebBrowserCommandUpdater=class(TCustomWebBrowserComponent)
  private
   FCmds               :TCommandStateArray;
   FOnUpdateCommands   :TCommandUpdaterEvent;
   FBeforeCommand      :TCommandUpdaterBeforeExecuteEvent;
   FAfterCommand       :TCommandUpdaterEvent;
   FOnGetActionState   :TGetActionStateEvent;
   FOnSaveActionState  :TSaveActionStateEvent;
   FOnElementPropertiesChanged:TElementPropertiesChangedEvent;
   FOnFilterCommandState:TFilterCommandStateEvent;
   FWebBrowser         :TWebBrowserEx;
   FOnBrowserChanged   :TNotifyEvent;
   FOwner              :TComponent;
   FName               :TComponentName;
   FTag                :NativeInt;
   FComponents         :TList;
   FFreeNotifies       :TList;
   FDesignInfo         :Integer;
   FComponentState     :TComponentState;
   FVCLComObject       :Pointer;
   FObservers          :TObservers;
   FSortedComponents   :TList;
   function GetComponent(AIndex: Integer): TComponent;
  protected
   FComponentStyle     :TComponentStyle;
  public
   function CommandState(CmdID: TOleEnum): TCommandStates;
   procedure DoElementPropertiesChanged(Element: IHTMLElement; Properties: TElementProperties);
   procedure DoAfterCommand(CmdID: Cardinal);
   procedure DoBeforeCommand(CmdID: Cardinal; var Executed: Boolean);
   function GetActionState(Action: TObject; State: TCommandState; Value: Boolean): Boolean;
   procedure RegisterCommand(CmdID: Cardinal);
   (basic) procedure RegisterCommands;
   procedure SaveActionState(Action: TObject; State: TCommandState; Value: Boolean);
   procedure UnRegisterCommand(CmdID: Cardinal);
   (basic) procedure UnRegisterCommands;
   procedure UpdateCommands(CmdID: Cardinal);
   constructor Create(AOwner: TComponent);
   class destructor Destroy;
   procedure BeforeDestruction;
   procedure DestroyComponents;
   procedure Destroying;
   function ExecuteAction(Action: TBasicAction): Boolean;
   function FindComponent(const AName: string): TComponent;
   procedure FreeNotification(AComponent: TComponent);
   procedure RemoveFreeNotification(AComponent: TComponent);
   procedure FreeOnRelease;
   function GetEnumerator: TComponentEnumerator;
   function GetParentComponent: TComponent;
   function GetNamePath: string;
   function HasParent: Boolean;
   procedure InsertComponent(AComponent: TComponent);
   procedure RemoveComponent(AComponent: TComponent);
   procedure SetSubComponent(IsSubComponent: Boolean);
   function SafeCallException(ExceptObject: TObject; ExceptAddr: Pointer): HRESULT;
   function UpdateAction(Action: TBasicAction): Boolean;
   function IsImplementorOf(const I: IInterface): Boolean;
   function ReferenceInterface(const I: IInterface; Operation: TOperation): Boolean;
   class destructor Destroy;
   procedure Assign(Source: TPersistent);
   function GetNamePath: string;
   constructor Create;
   procedure Free;
   class function InitInstance(Instance: Pointer): TObject;
   procedure CleanupInstance;
   function ClassType: TClass;
   class function ClassName: string;
   class function ClassNameIs(const Name: string): Boolean;
   class function ClassParent: TClass;
   class function ClassInfo: Pointer;
   class function InstanceSize: Integer;
   class function InheritsFrom(AClass: TClass): Boolean;
   class function MethodAddress(const Name: ShortString): Pointer;
   class function MethodAddress(const Name: string): Pointer;
   class function MethodName(Address: Pointer): string;
   class function QualifiedClassName: string;
   function FieldAddress(const Name: ShortString): Pointer;
   function FieldAddress(const Name: string): Pointer;
   function GetInterface(const IID: TGUID; out Obj): Boolean;
   class function GetInterfaceEntry(const IID: TGUID): PInterfaceEntry;
   class function GetInterfaceTable: PInterfaceTable;
   class function UnitName: string;
   class function UnitScope: string;
   function Equals(Obj: TObject): Boolean;
   function GetHashCode: Integer;
   function ToString: string;
   function SafeCallException(ExceptObject: TObject; ExceptAddr: Pointer): HRESULT;
   procedure AfterConstruction;
   procedure BeforeDestruction;
   procedure Dispatch(var Message);
   procedure DefaultHandler(var Message);
   class function NewInstance: TObject;
   procedure FreeInstance;
   class destructor Destroy;
   property AfterCommand: TCommandUpdaterEvent;
   property BeforeCommand: TCommandUpdaterBeforeExecuteEvent;
   property OnUpdateCommands: TCommandUpdaterEvent;
   property OnGetActionState: TGetActionStateEvent;
   property OnSaveActionState: TSaveActionStateEvent;
   property OnElementPropertiesChanged: TElementPropertiesChangedEvent;
   property OnFilterCommandState: TFilterCommandStateEvent;
   property WebBrowser: TWebBrowserEx;
   property OnBrowserChanged: TNotifyEvent;
   property ComObject: IInterface;
   property ComponentCount: Integer;
   property ComponentIndex: Integer;
   property ComponentState: TComponentState;
   property ComponentStyle: TComponentStyle;
   property DesignInfo: Integer;
   property Owner: TComponent;
   property VCLComObject: Pointer;
   property Observers: TObservers;
  published
   property Name: TComponentName;
   property Tag: NativeInt;
  end;
